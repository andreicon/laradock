version: '2'

services:

### Workspace Utilities Container ###########################

    workspace:
        build:
            context: ./workspace
            args:
                - INSTALL_XDEBUG=false
                - INSTALL_MONGO=false
                - INSTALL_NODE=false
                - INSTALL_DRUSH=false
                - INSTALL_AEROSPIKE_EXTENSION=false
                - COMPOSER_GLOBAL_INSTALL=false
                - INSTALL_WORKSPACE_SSH=false
                - PUID=1000
                - PGID=1000
                - NODE_VERSION=stable
        volumes_from:
            - volumes_source
        extra_hosts:
            # IMPORTANT: Replace with your Docker Host IP (will be appended to /etc/hosts)
            - "dockerhost:192.168.99.100"
        ports:
           - "20022:22"
        tty: true



### PHP-FPM Container #######################################

    php-fpm:
        build:
            context: ./php-fpm
            args:
                - INSTALL_XDEBUG=false
                - INSTALL_MONGO=false
                - INSTALL_ZIP_ARCHIVE=false
                - INSTALL_MEMCACHED=false
                - INSTALL_OPCACHE=false
                - INSTALL_AEROSPIKE_EXTENSION=false
            dockerfile: Dockerfile-70
        volumes_from:
            - volumes_source
        expose:
            - "9000"
        links:
            - workspace
            - mysql
        extra_hosts:
            # IMPORTANT: Replace with your Docker Host IP (will be appended to /etc/hosts)
            - "dockerhost:192.168.20.15"
        environment:
            # IMPORTANT: Set the Remote Interpreter entry matching name to `laravel`
            - PHP_IDE_CONFIG="serverName=laravel"
            - DB_HOST=mysql
            - DB_DATABASE=new_parteneri
            - DB_USERNAME=parteneri
            - DB_PASSWORD=p4rt3n3r1

### Nginx Server Container ##################################

    nginx:
        build:
            context: ./nginx
            args:
                - PHP_UPSTREAM=php-fpm
        volumes_from:
            - volumes_source
        volumes:
            - ./logs/nginx/:/var/log/nginx
        ports:
            - "80:80"
            - "443:443"
        links:
            - php-fpm

### MySQL Container #########################################

    mysql:
        build: ./mariadb
        environment:
            - TERM=xterm
            - MYSQL_ROOT_PASSWORD=admin
            - MYSQL_INITDB_SKIP_TZINFO=1
        volumes_from:
            - volumes_data
        command: mysqld --wsrep_new_cluster --user=mysql

    mysql-worker:
        build: ./mariadb
        depends_on:
            - mysql
        environment:
            - TERM=xterm
            - MYSQL_ROOT_PASSWORD=admin
            - MYSQL_INITDB_SKIP_TZINFO=1
        command: mysqld --wsrep_cluster_address=gcomm://mysql --user=mysql

### phpMyAdmin Container ##################################

    phpmyadmin:
        build: ./phpmyadmin
        environment:
            PMA_ARBITRARY: 1
            MYSQL_USER: parteneri
            MYSQL_PASSWORD: p4rt3n3r1
            MYSQL_ROOT_PASSWORD: root
        volumes_from:
            - volumes_data
        ports:
            - "8080:80"
        links:
            # for mysql container
            - "mysql:db"
            # for mariadb container
            # - "mariadb:db"

### Laravel Application Code Container ######################

    volumes_source:
        image: tianon/true
        volumes:
            - ../:/var/www/laravel
            # Demonstration of how to mount multiple sites
            # - ../../site_a/:/var/www/site_a
            # - ../../site_b/:/var/www/site_b

### Databases Data Container ################################

    volumes_data:
        image: tianon/true
        volumes:
            - ./mariadb/entrypoint.d:/docker-entrypoint-initdb.d
            - ./data/mysql:/var/lib/mysql
            - ./data/postgres:/var/lib/postgresql/data
            - ./data/memcached:/var/lib/memcached
            - ./data/redis:/data
            - ./data/neo4j:/var/lib/neo4j/data
            - ./data/mongo:/data/db
            - ./data/aerospike:/opt/aerospike/data
            - ./data/sessions:/sessions
            - ./data/elasticsearch/data:/usr/share/elasticsearch/data

### Add more Containers below ###############################

### CLUSTERCONTROL DATA #####################################

    cluster_data:
        image: tianon/true
        volumes:
            - ./data/clustercontrol:/var/lib/mysql

### ClusterControl Container ################################

    clustercontrol:
        build:
            context: ./clustercontrol
        image: severalnines/clustercontrol
        hostname: clustercontrol
        environment: 
            - CMON_PASSWORD=cmon
            - MYSQL_ROOT_PASSWORD=root
        ports:
            - "5000:80"
        #volumes_from:
        #    - cluster_data

#############################################################